@page "/usuarios"
@attribute [Authorize]
@using Blazor_Finance_Web.Models
@using Blazor_Finance_Web.Services
@using Blazor_Finance_Web.Services.Interfaces
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@inject IUsuarioService usuarioService
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navigationManager

<PageTitle>Lista Usuários</PageTitle>

<h1>Cadastro de Usuários</h1>

<p>
    <a href="usuarios/create" class="btn btn-primary">Novo Usuário</a>
</p>

@if (Usuarios is null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <QuickGrid Class="table table-striped" Items="Usuarios.AsQueryable()">
        <PropertyColumn Property="usuario => usuario.Id" />
        <PropertyColumn Property="usuario => usuario.Nome" />
        <PropertyColumn Property="usuario => usuario.TipoUsuarioFormatado" Title="Tipo Usuário" />
        <PropertyColumn Property="usuario => usuario.Email" />

        <TemplateColumn Context="usuario">
            <a href="@($"usuarios/edit?id={usuario.Id}")" class="btn btn-info">Editar</a> |
            <a href="@($"usuarios/details?id={usuario.Id}")" class="btn btn-success">Detalhes</a> |
            <a href="@($"usuarios/delete?id={usuario.Id}")" class="btn btn-danger">Deletar</a>
        </TemplateColumn>
    </QuickGrid>
}

@code {
    private List<Usuario>? Usuarios { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Usuarios = await usuarioService.GetAllUsuariosAsync();
    }
}
