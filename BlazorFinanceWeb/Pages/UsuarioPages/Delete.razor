@page "/usuarios/delete"
@using FinanceWeb.Services.Interfaces
@using Microsoft.EntityFrameworkCore
@using FinanceWeb.Models
@inject IUsuarioService usuarioService
@inject NavigationManager navigationManager

<PageTitle>Deletar Usuário</PageTitle>

<div>
    <h2>Tem certeza que deseja deletar o resgistro?</h2>
    <hr />
    @if (usuario is null)
    {
        <p><em>Carregando...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@usuario.Nome</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@usuario.Email</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Tipo Usuário</dt>
            <dd class="col-sm-10">@usuario.TipoUsuarioFormatado</dd>
        </dl>
        <EditForm method="post" Model="usuario" OnValidSubmit="DeleteUsuario" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(usuario is null)">Deletar</button> |
            <a href="/usuarios" class="btn btn-outline-secondary">Retornar para lista</a>
        </EditForm>
    }
</div>

@code {
    private Usuario? usuario;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        usuario = await usuarioService.GetUsuarioByIdAsync(Id);

        if (usuario is null)
        {
            navigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteUsuario()
    {
        if (usuario != null)
        {
            await usuarioService.DeleteUsuarioAsync(usuario.Id);
            navigationManager.NavigateTo("/usuarios");
        }
    }
}
