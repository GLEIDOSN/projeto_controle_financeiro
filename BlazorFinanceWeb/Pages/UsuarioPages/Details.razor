@page "/usuarios/details"
@using FinanceWeb.Services
@using FinanceWeb.Services.Interfaces
@using Microsoft.EntityFrameworkCore
@using FinanceWeb.Models
@inject NavigationManager navigationManager
@inject IUsuarioService usuarioService

<PageTitle>Detalhes Usuário</PageTitle>

<div>
    <h2>Detalhes Usuário</h2>
    <hr />
    @if (usuario is null)
    {
        <p><em>Carregando...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@usuario.Nome</dd>
            <dt class="col-sm-2">Tipo Usuário</dt>
            <dd class="col-sm-10">@usuario.TipoUsuarioFormatado</dd>
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@usuario.Email</dd>
        </dl>
        <div>
            <a href="@($"/usuarios/edit?id={usuario.Id}")" class="btn btn-info">Editar</a> |
            <a href="@($"/usuarios")" class="btn btn-outline-secondary">Retornar para lista</a>
        </div>
    }
</div>

@code {
    private Usuario? usuario;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        usuario = await usuarioService.GetUsuarioByIdAsync(Id);

        if (usuario is null)
        {
            navigationManager.NavigateTo("notfound");
        }
    }
}
